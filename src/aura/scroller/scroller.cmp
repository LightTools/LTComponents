<aura:component extensible="true"
                description="Creates a container that enables native scrolling. Open and highly customizable alternative for ui:scrollerWrapper.">

    <!-- component variables -->
    <aura:attribute name="direction" type="String" default="both" access="public" description="Scroll direction: horizontal, vertical, both"/>
    <aura:attribute name="transform" type="Boolean" default="true" access="public" description="Use hardware acceleration (if this is supported by a browser) to make scrolling smooth."/>
    <aura:attribute name="class" type="String" access="public" description="Assign any css class."/>
    <!-- component variables -->

    <!-- component events -->
    <aura:registerEvent name="onscroll" type="c:event"/>
    <!-- /component events -->

    <!-- component methods -->
    <aura:method name="getSize" action="{! c.callMethod }" description="Method to get scroll size." />
    <aura:method name="getPosition" action="{! c.callMethod }" description="Method to get scroll position." />
    <aura:method name="setPosition" action="{! c.callMethod }" description="Method to set scroll position."> 
        <aura:attribute name="position" type="Object" required="true" description="Parameter to define vertical and horizontal position of scroll." />
    </aura:method>
    <!-- component methods -->

    <!-- component handlers  -->
    <aura:handler name="render" value="{! this }" action="{! c.initialize }"/>
    <!-- /component handlers -->

    <!-- component content -->
    <div class="{! join(' ', 'lt-scroller', join(' ',
                   if (equals(v.direction, 'horizontal'), 'lt-scroller-direction_horizontal',
                   if (equals(v.direction, 'vertical'), 'lt-scroller-direction_vertical', 'lt-scroller-direction_both')),
                   if (v.transform, 'lt-scroller-transform', '')),
                   v.class) }">
        {! v.body }
    </div>
    <!-- /component content -->

</aura:component>